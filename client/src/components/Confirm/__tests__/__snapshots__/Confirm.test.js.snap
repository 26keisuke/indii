// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Confirm is rendered w/o error 1`] = `
<Confirm
  postAction={[Function]}
  update={
    Object {
      "confirmation": Object {
        "action": "TEST_ACTION",
        "buttonMessage": "TEST_BTN",
        "id": "TEST_ID",
        "message": "TEST_MESSAGE",
        "next": undefined,
        "on": true,
        "title": "TEST_TITLE",
        "value": "TEST_VALUE",
      },
    }
  }
>
  <Fade
    in={true}
  >
    <Transition
      appear={false}
      enter={true}
      exit={true}
      in={true}
      mountOnEnter={false}
      onEnter={[Function]}
      onEntered={[Function]}
      onEntering={[Function]}
      onExit={[Function]}
      onExited={[Function]}
      onExiting={[Function]}
      timeout={100}
      unmountOnExit={false}
    >
      <styled.div
        style={
          Object {
            "opacity": 1,
            "top": "50%",
            "transition": "all 100ms ease-in-out",
          }
        }
      >
        <div
          className="sc-fzomuh RfEQn"
          style={
            Object {
              "opacity": 1,
              "top": "50%",
              "transition": "all 100ms ease-in-out",
            }
          }
        >
          <div>
            <Styled(IoMdClose)
              onClick={[Function]}
            >
              <IoMdClose
                className="sc-fzoJus dkKAUY"
                onClick={[Function]}
              >
                <IconBase
                  attr={
                    Object {
                      "viewBox": "0 0 512 512",
                    }
                  }
                  className="sc-fzoJus dkKAUY"
                  onClick={[Function]}
                >
                  <svg
                    className="sc-fzoJus dkKAUY"
                    fill="currentColor"
                    height="1em"
                    onClick={[Function]}
                    stroke="currentColor"
                    strokeWidth="0"
                    style={
                      Object {
                        "color": undefined,
                      }
                    }
                    viewBox="0 0 512 512"
                    width="1em"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M405 136.798L375.202 107 256 226.202 136.798 107 107 136.798 226.202 256 107 375.202 136.798 405 256 285.798 375.202 405 405 375.202 285.798 256z"
                      key="0"
                    />
                  </svg>
                </IconBase>
              </IoMdClose>
            </Styled(IoMdClose)>
            <styled.h2>
              <h2
                className="sc-fzqAui dEKnBj"
              >
                TEST_TITLE
              </h2>
            </styled.h2>
            <styled.h4>
              <h4
                className="sc-fzqMdD djoGIr"
              >
                TEST_MESSAGE
              </h4>
            </styled.h4>
            <styled.p>
              <p
                className="sc-fzowVh sgLwX"
              />
            </styled.p>
            <styled.div>
              <div
                className="sc-fzoaKM kRgDba"
              >
                <button
                  onClick={[Function]}
                >
                  TEST_BTN
                </button>
                <button
                  onClick={[Function]}
                >
                  キャンセル
                </button>
              </div>
            </styled.div>
          </div>
        </div>
      </styled.div>
    </Transition>
  </Fade>
</Confirm>
`;

exports[`Confirm rendered w/o error 1`] = `
<Confirm
  postAction={[Function]}
  update={
    Object {
      "confirmation": Object {
        "action": "TEST_ACTION",
        "buttonMessage": "TEST_BTN",
        "id": "TEST_ID",
        "message": "TEST_MESSAGE",
        "next": undefined,
        "on": true,
        "title": "TEST_TITLE",
        "value": "TEST_VALUE",
      },
    }
  }
>
  <Fade
    in={true}
  >
    <Transition
      appear={false}
      enter={true}
      exit={true}
      in={true}
      mountOnEnter={false}
      onEnter={[Function]}
      onEntered={[Function]}
      onEntering={[Function]}
      onExit={[Function]}
      onExited={[Function]}
      onExiting={[Function]}
      timeout={100}
      unmountOnExit={false}
    >
      <styled.div
        style={
          Object {
            "opacity": 1,
            "top": "50%",
            "transition": "all 100ms ease-in-out",
          }
        }
      >
        <div
          className="sc-fzomuh RfEQn"
          style={
            Object {
              "opacity": 1,
              "top": "50%",
              "transition": "all 100ms ease-in-out",
            }
          }
        >
          <div>
            <Styled(IoMdClose)
              onClick={[Function]}
            >
              <IoMdClose
                className="sc-fzoJus dkKAUY"
                onClick={[Function]}
              >
                <IconBase
                  attr={
                    Object {
                      "viewBox": "0 0 512 512",
                    }
                  }
                  className="sc-fzoJus dkKAUY"
                  onClick={[Function]}
                >
                  <svg
                    className="sc-fzoJus dkKAUY"
                    fill="currentColor"
                    height="1em"
                    onClick={[Function]}
                    stroke="currentColor"
                    strokeWidth="0"
                    style={
                      Object {
                        "color": undefined,
                      }
                    }
                    viewBox="0 0 512 512"
                    width="1em"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M405 136.798L375.202 107 256 226.202 136.798 107 107 136.798 226.202 256 107 375.202 136.798 405 256 285.798 375.202 405 405 375.202 285.798 256z"
                      key="0"
                    />
                  </svg>
                </IconBase>
              </IoMdClose>
            </Styled(IoMdClose)>
            <styled.h2>
              <h2
                className="sc-fzqAui dEKnBj"
              >
                TEST_TITLE
              </h2>
            </styled.h2>
            <styled.h4>
              <h4
                className="sc-fzqMdD djoGIr"
              >
                TEST_MESSAGE
              </h4>
            </styled.h4>
            <styled.p>
              <p
                className="sc-fzowVh sgLwX"
              />
            </styled.p>
            <styled.div>
              <div
                className="sc-fzoaKM kRgDba"
              >
                <button
                  onClick={[Function]}
                >
                  TEST_BTN
                </button>
                <button
                  onClick={[Function]}
                >
                  キャンセル
                </button>
              </div>
            </styled.div>
          </div>
        </div>
      </styled.div>
    </Transition>
  </Fade>
</Confirm>
`;
